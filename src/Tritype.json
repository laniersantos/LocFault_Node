{
    "class_name": "Tritype",
    "functions": [{
        "label": "caller",
        "return_type": "int", 
        "parameters": ["int i", "int j", "int k", "/*@ requires@ this.((i==2) && (j == 3) && (k ==2))", "@ ensures@ this.(trityp== 2)"],
        "modifiers": ["@*/public", "static"], 
        "nodes": [
            "int i;int j;int k;/*@ requires@ this.((i==2) && (j == 3) && (k ==2));@ ensures@ this.(trityp== 2);",
            "int trityp;",
            "trityp = 4;",
            "trityp = 0;",
            "trityp = trityp + 1;",
            "",
            "trityp = trityp + 2;",
            "",
            "trityp = trityp + 3;",
            "",
            "",
            "trityp = 4;",
            "trityp = 1;",
            "",
            "",
            "trityp = 3;",
            "",
            "trityp = 2;",
            "",
            "trityp = 1;",
            "",
            "trityp = 2;",
            "trityp = 4;",
            "",
            "",
            "",
            "",
            "",
            "return trityp;"
        ],
        "edges": [
            [
                {
                    "to_node": 1,
                    "condition": ""
                }
            ],
            [
                {
                    "to_node": 2,
                    "condition": "i == 0 || j == 0 || k == 0"
                },
                {
                    "to_node": 3,
                    "condition": "!(i == 0 || j == 0 || k == 0)"
                }
            ],
            [
                {
                    "to_node": 28,
                    "condition": ""
                }
            ],
            [
                {
                    "to_node": 4,
                    "condition": "i == j"
                },
                {
                    "to_node": 5,
                    "condition": "!(i == j)"
                }
            ],
            [
                {
                    "to_node": 5,
                    "condition": ""
                }
            ], 
            [
                {
                    "to_node": 6,
                    "condition": "i == k"
                },
                {
                    "to_node": 7,
                    "condition": "!(i == k)"
                }
            ],
            [
                {
                    "to_node": 7,
                    "condition": ""
                }
            ], 
            [
                {
                    "to_node": 8,
                    "condition": "j == k"
                },
                {
                    "to_node": 9,
                    "condition": "!(j == k)"
                }
            ],
            [
                {
                    "to_node": 9,
                    "condition": ""
                }
            ],
            [
                {
                    "to_node": 10,
                    "condition": "trityp == 0"
                },
                {
                    "to_node": 14,
                    "condition": "!(trityp == 0)"
                }
            ],
            [
                {
                    "to_node": 11,
                    "condition": "(i+j) <= k || (j+k) <= i || (i+k) <= j"
                },
                {
                    "to_node": 12,
                    "condition": "!((i+j) <= k || (j+k) <= i || (i+k) <= j)"
                }
            ],
            [
                {
                    "to_node": 13,
                    "condition": ""
                }
            ],
            [
                {
                    "to_node": 13,
                    "condition": ""
                }
            ],
            [
                {
                    "to_node": 27,
                    "condition": ""
                }
            ], 
            [
                {
                    "to_node": 15,
                    "condition": "trityp > 3"
                },
                {
                    "to_node": 16,
                    "condition": "!(trityp > 3)"
                }
            ],
            [
                {
                    "to_node": 26,
                    "condition": ""
                }
            ],
            [
                {
                    "to_node": 17,
                    "condition": "trityp == 1 && (i+j) > k"
                },
                {
                    "to_node": 18,
                    "condition": "!(trityp == 1 && (i+j) > k)"
                }
            ],
            [
                {
                    "to_node": 25,
                    "condition": ""
                }
            ],
            [
                {
                    "to_node": 19,
                    "condition": "trityp == 2 && (i+k) > j"
                },
                {
                    "to_node": 20,
                    "condition": "!(trityp == 2 && (i+k) > j)"
                }
            ],
            [
                {
                    "to_node": 24,
                    "condition": ""
                }
            ],
            [
                {
                    "to_node": 21,
                    "condition": "trityp == 3 && (j+k) > i"
                },
                {
                    "to_node": 22,
                    "condition": "!(trityp == 3 && (j+k) > i)"
                }
            ],
            [
                {
                    "to_node": 23,
                    "condition": ""
                }
            ],
            [
                {
                    "to_node": 23,
                    "condition": ""
                }
            ],
            [
                {
                    "to_node": 24,
                    "condition": ""
                }
            ],
            [
                {
                    "to_node": 25,
                    "condition": ""
                }
            ],
            [
                {
                    "to_node": 26,
                    "condition": ""
                }
            ],
            [
                {
                    "to_node": 27,
                    "condition": ""
                }
            ],
            [
                {
                    "to_node": 28,
                    "condition": ""
                }
            ],
            []
        ],
        "initial_nodes": 0,
        "final_nodes": [28],
        "definitions": {
            "0": ["i", "j", "k"],
            "1": ["trityp"],
            "2": ["trityp"],
            "3": ["trityp"],
            "4": ["trityp"],
            "5": [],
            "6": ["trityp"],
            "7": [],
            "8": ["trityp"],
            "9": [],
            "10": [],
            "11": ["trityp"],
            "12": ["trityp"],
            "13": [],
            "14": [],
            "15": ["trityp"],
            "16": [],
            "17": ["trityp"],
            "18": [],
            "19": ["trityp"],
            "20": [],
            "21": ["trityp"],
            "22": ["trityp"],
            "23": [],
            "24": [],
            "25": [],
            "26": [],
            "27": [],
            "28": [],
            "0,1": [],
            "1,2": [],
            "1,3": [],
            "2,28": [],
            "3,4": [],
            "3,5": [],
            "4,5": [],
            "5,6": [],
            "5,7": [],
            "6,7": [],
            "7,8": [],
            "7,9": [],
            "8,9": [],
            "9,10": [],
            "9,14": [],
            "10,11": [],
            "10,12": [],
            "11,13": [],
            "12,13": [],
            "13,27": [],
            "14,15": [],
            "14,16": [],
            "15,26": [],
            "16,17": [],
            "16,18": [],
            "17,25": [],
            "18,19": [],
            "18,20": [],
            "19,24": [],
            "20,21": [],
            "20,22": [],
            "21,23": [],
            "22,23": [],
            "23,24": [],
            "24,25": [],
            "25,26": [],
            "26,27": [],
            "27,28": []
        },
        "uses": {
            "0": [],
            "1": [],
            "2": [],
            "3": [],
            "4": ["trityp"],
            "5": [],
            "6": ["trityp"],
            "7": [],
            "8": ["trityp"],
            "9": [],
            "10": [],
            "11": [],
            "12": [],
            "13": [],
            "14": [],
            "15": [],
            "16": [],
            "17": [],
            "18": [],
            "19": [],
            "20": [],
            "21": [],
            "22": [],
            "23": [],
            "24": [],
            "25": [],
            "26": [],
            "27": [],
            "28": [],
            "0,1": [],
            "1,2": ["i", "j", "k"],
            "1,3": ["i", "j", "k"],
            "2,28": [],
            "3,4": ["i", "j"],
            "3,5": ["i", "j"],
            "4,5": [],
            "5,6": ["i", "k"],
            "5,7": ["i", "k"],
            "6,7": [],
            "7,8": ["j", "k"],
            "7,9": ["j", "k"],
            "8,9": [],
            "9,10": ["trityp"],
            "9,14": ["trityp"],
            "10,11": ["i", "j", "k", "j", "k", "i", "i", "k", "j"],
            "10,12": ["i", "j", "k", "j", "k", "i", "i", "k", "j"],
            "11,13": [],
            "12,13": [],
            "13,27": [],
            "14,15": ["trityp"],
            "14,16": ["trityp"],
            "15,26": [],
            "16,17": ["trityp", "i", "j", "k"],
            "16,18": ["trityp", "i", "j", "k"],
            "17,25": [],
            "18,19": ["trityp", "i", "k", "j"],
            "18,20": ["trityp", "i", "k", "j"],
            "19,24": [],
            "20,21": ["trityp", "j", "k", "i"],
            "20,22": ["trityp", "j", "k", "i"],
            "21,23": [],
            "22,23": [],
            "23,24": [],
            "24,25": [],
            "25,26": [],
            "26,27": [],
            "27,28": []
        }
    }]
}
